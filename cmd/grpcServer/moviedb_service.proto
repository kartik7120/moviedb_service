syntax = "proto3";

package moviedb_service;

option go_package = "github.com/kartik7120/booking_moviedb_service/cmd/grpcServer;moviedb";

import "google/protobuf/empty.proto";

enum SeatType {
    TWO_D = 0;
    THREE_D = 1;
    FOUR_D = 2;
    NORMAL = 3;
    VIP = 4;
}

message SeatMatrix {
    string seat_number = 1;
    bool is_booked = 2 [deprecated = true];
    int32 price = 3;
    int32 row = 4;
    int32 column = 5;
    SeatType type = 6;
    int32 id = 7;
}

message AddSeatMatrixInput {
    int32 venueid = 1;
    repeated SeatMatrix seats = 2;
}

message AddSeatMatrixResponse {
    int32 status = 1;
    string message = 2;
    string error = 3;
}

enum CastAndCrewType {
    ACTOR = 0;
    DIRECTOR = 1;
    PRODUCER = 2;
    WRITER = 3;
    MUSIC_DIRECTOR = 4;
    CINEMATOGRAPHER = 5;
    EDITOR = 6;
    ART_DIRECTOR = 7;
    COSTUME_DESIGNER = 8;
    MAKEUP_ARTIST = 9;
    SOUND_DESIGNER = 10;
    VFX_ARTIST = 11;
    STUNT_PERFORMER = 12;
    CHOREOGRAPHER = 13;
    LYRICIST = 14;
    PLAYBACK_SINGER = 15;
    DUBBING_ARTIST = 16;
    PUBLICITY_DESIGNER = 17;
    PUBLIC_RELATIONS = 18;
    DISTRIBUTOR = 19;
    MARKETING = 20;
    LEGAL = 21;
    FINANCE = 22;
    PRODUCTION = 23;
    OTHER = 24;
}

message CastAndCrew {
    string name = 1;
    CastAndCrewType type = 2;
    string character_name = 3;
    string photourl = 4;
}

message MovieTimeSlot {
    string start_time = 1;
    string end_time = 2;
    int32 duration = 3;
    string date = 4;
    SeatType movie_format = 5;
    int32 movieid = 6;
    int32 venueid = 7;
}

message Movie {
    string title = 1;
    string description = 2;
    int32 duration = 3;
    repeated string language = 4;
    repeated string type = 5;
    repeated CastAndCrew cast_crew = 6;
    string poster_url = 7;
    string trailer_url = 8;
    string release_date = 9;
    repeated string movie_resolution = 10;
    repeated Venue venues = 11;
    // string movieid = 12;
    int64 votes = 13;
    int32 ranking = 14;
    int32 id = 15;
    reserved 12;
}

enum VenueType {
    MOVIE = 0;
    CONCERT = 1;
    PLAY = 2;
    STANDUP = 3;
}

message Venue {
    string name = 1;
    string address = 2;
    VenueType type = 3;
    int32 rows = 4;
    int32 columns = 5;
    float longitude = 6;
    float latitude = 7;
    int32 screen_number = 8;
    repeated SeatMatrix seats = 9;
    repeated MovieTimeSlot movie_time_slots = 10;
    repeated Movie movies = 11;
    int32 id = 12;
    repeated string movie_format_supported = 13;
    repeated string language_supported = 14;
}

message MovieList {
    repeated Movie movies = 1;
}

message MovieRequest {
    string title = 1;
    string movieid = 2;
    string venueid = 3;
}

message MovieResponse {
    int32 status = 1;
    string message = 2;
    Movie movie = 3;
    string error = 4;
}

message MovieListResponse {
    int32 status = 1;
    string message = 2;
    MovieList movie_list = 3;
    string error = 4;
}

message VenueResponse {
    int32 status = 1;
    string message = 2;
    Venue Venue = 3;
    string error = 4;
}

message GetUpcomingMovieRequest {
    string date = 1;
}

message GetUpcomingMovieResponse {
    int32 status = 1;
    string message = 2;
    repeated Movie movie_list = 3;
    string error = 4;
}

message GetNowPlayingMovieRequest {
    int64 longitude = 1;
    int64 latitude = 2;
}

message Review {
   int32 movieID = 1;
   int32 userID = 2;
   int32 rating = 3;
   string comment = 4;
   string title = 5;
   int32 reviewID = 6;
   int32 createdAt = 7;
   string reviewerName = 8;
}

message ReviewUpdateRequest {
   int32 userID = 1;
   int32 reviewID = 2;
   int32 movieID = 3;
   string comment = 4;
   string title = 5;
   int32 rating = 6;
}

message ReviewResponse {
   int32 status = 1;
   string message = 2;
   Review review = 3;
   string error = 4;
}

message ReviewRequest {
    int32 userID = 1;
    int32 reviewID = 2;
    int32 movieID = 3;
}

message ReviewList {
    repeated Review reviews = 1;
}

message ReviewListResponse {
    int32 status = 1;
    string message = 2;
    ReviewList review_list = 3;
    string error = 4;
    int32 totalReviewCount = 5;
    int32 totalVotes = 6;
}

enum SortBy {
    ASCENDING = 0;
    DESCENDING = 1;
}

enum FilterBy {
    RATING = 0;
    DATE = 1;
}

message GetAllMovieReviewsRequest {
    int32 movieID = 1;
    int32 limit = 2;
    int32 offset = 3;
    SortBy sortBy = 5;
    FilterBy filterBy = 6;
}

message GetMovieTimeSlotRequest {
    string movieid = 1;
    reserved 2;
    string startDate = 3;
    string endDate = 4;
    int64 old_longitude  = 5 [deprecated = true];
    int64 old_latitude = 6 [deprecated = true];
    float longitude = 7;
    float latitude = 8;
}

message GetMovieTimeSlotResponse {
    int32 status = 1;
    string message = 2;
    repeated MovieTimeSlot movie_time_slots = 3;
    string error = 4;
    repeated Venue venues = 5;
}

message MovieTimeSlotResponse {
    int32 status = 1;
    string message = 2;
    string error = 3;
}

message MovieTimeSlotUpdateResponse {
    int32 status = 1;
    string message = 2;
    MovieTimeSlot movie_time_slot = 3;
    string error = 4;
}

message MovieTimeSlotUpdate {
    string start_time = 1;
    string end_time = 2;
    int32 duration = 3;
    string date = 4;
    SeatType movie_format = 5;
    int32 movieid = 6;
    int32 venueid = 7;
    int32 movie_time_slot_id = 8;
}

message MovieTimeSlotDelete {
    int32 movie_time_slot_id = 1;
}

message GetSeatMatrixRequest {
    int32 venueid = 1;
}

message GetSeatMatrixResponse {
    int32 status = 1;
    string message = 2;
    repeated SeatMatrix seats = 3;
    string error = 4;
}

message UpdateSeatMatrixRequest {
    int32 venueid = 1;
    repeated SeatMatrix seats = 2;
}

message UpdateSeatMatrixResponse {
    int32 status = 1;
    string message = 2;
    string error = 3;
}

message DeleteSeatMatrixRequest {
    int32 venueid = 1;
    repeated SeatMatrix seats = 2 [deprecated = true];
    int32 seat_matrix_id = 3;
}

message DeleteSeatMatrixResponse {
    int32 status = 1;
    string message = 2;
    string error = 3;
}

message DeleteEntireSeatMatrixRequest {
    int32 venueid = 1;
}

message DeleteEntireSeatMatrixResponse {
    int32 status = 1;
    string message = 2;
    string error = 3;
}

message AddSingleSeatMatrixInput {
    int32 venueid = 1;
    SeatMatrix seat = 2;
}

message AddSingleSeatMatrixResponse {
    int32 status = 1;
    string message = 2;
    string error = 3;
}

message BookedSeats {
    int32 id = 1;
    string seat_number = 2;
    int32 movieTimeSlotID = 3;
    int32 seatMatrixID = 4;
    bool is_booked = 5;
    reserved 6;
    reserved 7;
    int32 price = 8;
    string movieName = 9;
}

message BookSeatsRequest {
    MovieTimeSlot movie_time_slot = 1 [deprecated = true];
    repeated BookedSeats seats = 2;
    int32 movie_time_slot_id = 3;
    reserved 4;
    string email = 5;
    // int64 phone_number = 6;
    reserved 6;
    string phone_number = 7;
}

message BookSeatsResponse {
    int32 status = 1;
    string message = 2;
    repeated int32 book_seats_id = 3;
    string error = 4;
}

message GetBookedSeatsRequest {
    int32 movie_time_slot_id = 1;
}

message GetBookedSeatsResponse {
    int32 status = 1;
    string message = 2;
    repeated BookedSeats booked_seats = 3;
    string error = 4;
}

message GetBookedSeatsDetailsRequest {
    repeated int32 booked_seats_ids = 1;
}

message GetBookedSeatsDetailsResponse {
    int32 status = 1;
    string message = 2;
    repeated BookedSeats booked_seats = 3;
    string error = 4;
}

message IsValidToCommitSeatsForBooking_Request {
    int32 movie_time_slot_id = 1;
    repeated int32 seatMatrixIds = 2;
}

message IsValidToCommitSeatsForBooking_Response {
    bool isvalid = 1;
    string error = 2;
    int32 status = 3;
    repeated BookedSeats toBeBookedSeats = 4;
}

message CreateTicketRequest {
    string idempotent_key = 1;
    string trasaction_id = 2;
}

message CreateRequestResponse {
    int32 status = 1;
    string error = 2;
}

service MovieDBService {
    rpc AddMovie (Movie) returns (MovieResponse);
    rpc GetMovie (MovieRequest) returns (MovieResponse);
    rpc GetAllMovies (google.protobuf.Empty) returns (MovieListResponse);
    rpc UpdateMovie (Movie) returns (MovieResponse);
    rpc DeleteMovie (MovieRequest) returns (MovieResponse);
    rpc AddVenue (Venue) returns (VenueResponse);
    rpc GetVenue (MovieRequest) returns (VenueResponse);
    rpc GetAllVenues (google.protobuf.Empty) returns (MovieListResponse);
    rpc UpdateVenue (Venue) returns (VenueResponse);
    rpc DeleteVenue (MovieRequest) returns (MovieResponse);
    rpc GetUpcomingMovies (GetUpcomingMovieRequest) returns (GetUpcomingMovieResponse);
    rpc GetNowPlayingMovies (GetNowPlayingMovieRequest) returns (GetUpcomingMovieResponse);
    rpc AddReview (Review) returns (ReviewResponse);
    rpc GetReview (ReviewRequest) returns (ReviewResponse);
    rpc UpdateReview (ReviewUpdateRequest) returns (ReviewResponse);
    rpc DeleteReview (ReviewRequest) returns (ReviewResponse);
    rpc GetAllMovieReviews (GetAllMovieReviewsRequest) returns (ReviewListResponse);
    rpc GetMovieTimeSlots (GetMovieTimeSlotRequest) returns (GetMovieTimeSlotResponse);
    rpc AddMovieTimeSlot (MovieTimeSlot) returns (MovieTimeSlotResponse);
    rpc UpdateMovieTimeSlot (MovieTimeSlotUpdate) returns (MovieTimeSlotUpdateResponse);
    rpc DeleteMovieTimeSlot (MovieTimeSlotDelete) returns (MovieTimeSlotResponse);
    rpc AddSeatMatrix(AddSeatMatrixInput) returns (AddSeatMatrixResponse);
    rpc AddSingleSeatMatrix(AddSingleSeatMatrixInput) returns (AddSingleSeatMatrixResponse);
    rpc GetSeatMatrix(GetSeatMatrixRequest) returns (GetSeatMatrixResponse);
    rpc UpdateSeatMatrix(UpdateSeatMatrixRequest) returns (UpdateSeatMatrixResponse);
    rpc DeleteSeatMatrix(DeleteSeatMatrixRequest) returns (DeleteSeatMatrixResponse);
    rpc DeleteEntireSeatMatrix(DeleteEntireSeatMatrixRequest) returns (DeleteEntireSeatMatrixResponse);
    rpc BookSeats(BookSeatsRequest) returns (BookSeatsResponse);
    rpc GetBookedSeats(GetBookedSeatsRequest) returns (GetBookedSeatsResponse);
    // rpc GetBookedSeatsDetails(GetBookedSeatsDetailsRequest) returns (GetBookedSeatsDetailsResponse);
    rpc IsValidToCommitSeatsForBooking(IsValidToCommitSeatsForBooking_Request) returns (IsValidToCommitSeatsForBooking_Response);
    rpc LockBookedSeats(GetBookedSeatsDetailsRequest) returns (GetBookedSeatsDetailsResponse);
    rpc CreateTicket(CreateTicketRequest) returns (CreateRequestResponse);
}